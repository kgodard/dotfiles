### INSTALLATION NOTES ###
# 1. Install Homebrew (https://github.com/mxcl/homebrew)
# NO - 2. brew install zsh
# NO - 3. Install OhMyZsh (https://github.com/robbyrussell/oh-my-zsh)
# 4. brew install reattach-to-user-namespace --wrap-pbcopy-pbpaste && brew link reattach-to-user-namespace
# 5. Install iTerm2
# 6. In iTerm2 preferences for your profile set:
#      Character Encoding: Unicode (UTF-8)
#      Report Terminal Type: xterm-256color
# NO - 7. Put itunesartist and itunestrack into PATH
#
#
# Usage:
# - Prefix is set to Ctrl-a (make sure you remapped Caps Lock to Ctrl)
# - All prefixed with Ctrl-a
#   - Last used window: /
#   - Last used pane:   ;
#   - Vertical split:   v
#   - Horizontal split: s
#   - Previous window:  [
#   - Next window:      ]
#   - Choose session:   Ctrl-s
#   - Quick window:     Ctrl-q

# set-option -g default-command "reattach-to-user-namespace -l zsh"

### LOOK & FEEL ###
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-termite:Tc"

# default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg colour179
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour colour64

# status bar right contents
# set -g status-right-length 65
# set -g status-right "#[fg=colour187][#(itunesartist) - #(itunestrack)] #[fg=default][%H:%M %e-%b-%Y]"
# set -g status-interval 5

set -g mouse on
set -g history-limit 30000
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# set-window-option -g utf8 on

set-option -g status-keys vi
set-option -g mode-keys vi

#no command delay
set -sg escape-time 0

#count windows and panes from 1
set -g base-index 1
setw -g pane-base-index 1



### KEYS ###

#using C-a as prefix
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# unbind /
# bind / last-window

# unbind %
bind - split-window -v
# unbind '"'
bind | split-window -h

# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -n C-h send-keys -X copy-mode-vi select-pane -L
# bind-key -n C-j send-keys -X copy-mode-vi select-pane -D
# bind-key -n C-k send-keys -X copy-mode-vi select-pane -U
# bind-key -n C-l send-keys -X copy-mode-vi select-pane -R
# bind-key -n C-\ send-keys -X copy-mode-vi select-pane -l

unbind {
bind { swap-pane -D
unbind }
bind } swap-pane -U

unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded"

bind Escape copy-mode
bind p paste-buffer

unbind [
bind [ previous-window
unbind ]
bind ] next-window

unbind o
bind o select-pane -t :.-

bind C-q command-prompt -I "htop" -p "Quick window command: " "new-window '%%'"

# bind -n 'v' send-keys -X copy-mode-vi begin-selection
# bind -n 'y' send-keys -X copy-mode-vi copy-selection
bind C-c run "tmux save-buffer - | pbcopy"
bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

bind C-s choose-session
